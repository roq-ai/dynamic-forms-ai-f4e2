generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model answer {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text        String?  @db.VarChar(255)
  question_id String   @db.Uuid
  user_id     String   @db.Uuid
  is_selected Boolean?
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  question    question @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  phone       String?  @db.VarChar(255)
  website     String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  form        form[]
}

model feedback {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  form_id    String   @db.Uuid
  rating     Int?
  comments   String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  form       form     @relation(fields: [form_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model form {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String     @db.VarChar(255)
  description String?    @db.VarChar(255)
  user_id     String     @db.Uuid
  company_id  String     @db.Uuid
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  feedback    feedback[]
  company     company    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  question    question[]
}

model question {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text       String   @db.VarChar(255)
  type       String   @db.VarChar(255)
  form_id    String   @db.Uuid
  order      Int?
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  answer     answer[]
  form       form     @relation(fields: [form_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  answer      answer[]
  company     company[]
  feedback    feedback[]
  form        form[]
}
